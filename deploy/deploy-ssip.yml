# vim: tabstop=2 expandtab shiftwidth=2 softtabstop=2 noai
---

- name: Deploy SSIP 209 Application
  hosts: ssip
  remote_user: mooja
  sudo: yes
  sudo_user: www-data


  # vhost variable should be provided outside the playbook
  vars: 
      site_root: "/srv/webapps/{{ vhost }}"
      venv_root: "{{ site_root }}/virtualenv"
      python_path: "{{ venv_root }}/bin/python"
      static_root: "{{ site_root }}/staticfiles"
      envdir_root: "{{ site_root }}/envdirs"
      manage_command: "{{ venv_root }}/bin/envdir {{ site_root }}/envdirs/production {{ python_path }} {{ site_root }}/source/manage.py"

  handlers:

    - name: reload nginx
      service: name=nginx enabled=yes state=reloaded
      sudo_user: root

    - name: reload gunicorn
      service: name={{ vhost }} state=reloaded enabled=yes
      sudo_user: root

  tasks: 

    - name: Install Required Python Packages, development files, and Git
      sudo: yes
      sudo_user: root
      apt: pkg={{ item }} state=present
      with_items:
        - python3.4
        - python3-dev
        - python3-pip
        - python-virtualenv
        - zlib1g-dev
        - libpq-dev
        - git


    # Web App
    - name: "Create App directory in /src/webapps/[webapp]"
      file: state=directory owner=www-data group=www-data mode=0775 dest={{ site_root }}
      sudo_user: root
      notify:
        - reload nginx

    - name: "Clone App Repository"
      git: repo=git://github.com/mooja/ssip209/ dest={{ site_root }} ssh_opts="-o StrictHostKeyChecking=no"
      notify:
        - reload gunicorn


    - name: Create Virtual Environment
      command: virtualenv {{ venv_root }} --python=python3 creates={{ venv_root }}/bin/python
      notify:
        - reload gunicorn


    - name: Install the Requirements into Virtual Environment
      pip: executable={{ venv_root }}/bin/pip 
             requirements={{ site_root }}/requirements/production.txt 
             state=present
      environment:
        LANG: en_US.UTF-8
        LC_CTYPE: en_US.UTF-8
      notify:
        - reload gunicorn


    - name: Get envdirs for site specific configuratoin
      sudo_user: www-data
      synchronize: src=/home/mooja/projects/ssip209/envdirs 
                     dest={{ site_root }} 
                     recursive=yes 
                     delete=yes 
                     archive=yes
      notify:
        - reload gunicorn

    # TODO: Setup Database

    - name: Create database directory
      file: dest={{ site_root }}/source/database state=directory

    # TODO: Use the django ansible module
    - name: Make Migrations
      command: "{{ manage_command }} makemigrations chdir={{ site_root }}/source"
      notify:
        - reload gunicorn

    # TODO: Use the django ansible module
    - name: Migrate
      command: "{{ manage_command }} migrate chdir={{ site_root }}/source"
      notify:
        - reload gunicorn

    # TODO: Use the django ansible module
    - name: Collect Static
      command: "{{ manage_command }} collectstatic --noinput chdir={{ site_root }}/source"
      notify:
        - reload gunicorn


    # NGINX 

    - name: Install Nginx
      sudo_user: root
      apt: pkg=nginx state=present


    - name: Create Nginx Virtual Host for {{ vhost }}
      sudo_user: root
      template: src=nginx-vhost.conf.j2 dest=/etc/nginx/sites-available/{{ vhost }}
      notify:
        - reload nginx
        - reload gunicorn


    - name: Link {{ vhost }} in /etc/nginx/sites-enabled
      sudo_user: root
      file: state=link dest=/etc/nginx/sites-enabled/{{ vhost }} src=/etc/nginx/sites-available/{{ vhost }}
      notify:
        - reload nginx
        - reload gunicorn


    # UPSTART

    - name: Create an Upstart file for {{ vhost }}
      sudo_user: root
      template: src=upstart-vhost.conf.j2 dest=/etc/init/{{ vhost }}.conf
      notify:
        - reload nginx
        - reload gunicorn
